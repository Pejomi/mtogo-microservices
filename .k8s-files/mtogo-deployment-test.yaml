apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-kafka-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper-kafka-deployment
  template:
    metadata:
      labels:
        app: zookeeper-kafka-deployment
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.3.2
        ports:
        - containerPort: 2181
        - containerPort: 2888
        - containerPort: 3888
        env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
      - name: kafka
        image: confluentinc/cp-kafka:7.3.2
        ports:
        - containerPort: 19092
        - containerPort: 9092
        - containerPort: 29092
        env:
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "INTERNAL://localhost:19092,EXTERNAL://zookeeper-kafka-service:9092,DOCKER://host.docker.internal:29092"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "INTERNAL"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "localhost:2181"
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_LOG4J_LOGGERS
            value: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
            value: "1"
          - name: KAFKA_JMX_PORT
            value: "9999"
          - name: KAFKA_JMX_HOSTNAME
            value: "${DOCKER_HOST_IP:-127.0.0.1}"
          - name: KAFKA_AUTHORIZER_CLASS_NAME
            value: "kafka.security.authorizer.AclAuthorizer"
          - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
            value: "true"

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-kafka-service
spec:
  selector:
    app: zookeeper-kafka-deployment
  ports:
    - name: internal
      protocol: TCP
      port: 19092
      targetPort: 19092
    - name: external
      protocol: TCP
      port: 9092
      targetPort: 9092
    - name: docker
      protocol: TCP
      port: 29092
      targetPort: 29092

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-deployment
  template:
    metadata:
      labels:
        app: auth-deployment
    spec:
      containers:
      - name: auth
        image: peternedergaard/auth-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8082
      - name: mysql
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: auth-service
        - name: MYSQL_USER
          value: user
        - name: MYSQL_PASSWORD
          value: password

---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth-deployment
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8082

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer-deployment
  template:
    metadata:
      labels:
        app: consumer-deployment
    spec:
      containers:
      - name: consumer
        image: peternedergaard/consumer-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
      - name: mysql
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: consumer-service
        - name: MYSQL_USER
          value: user
        - name: MYSQL_PASSWORD
          value: password

---
apiVersion: v1
kind: Service
metadata:
  name: consumer-service
spec:
  selector:
    app: consumer-deployment
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081